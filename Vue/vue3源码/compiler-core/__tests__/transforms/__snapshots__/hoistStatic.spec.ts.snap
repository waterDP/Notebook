// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compiler: hoistStatic transform hoist element with static key 1`] = `
"const _Vue = Vue
const { createVNode: _createVNode } = _Vue

const _hoisted_1 = /*#__PURE__*/_createVNode(\\"div\\", { key: \\"foo\\" }, null, -1 /* HOISTED */)

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _hoisted_1
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform hoist nested static tree 1`] = `
"const _Vue = Vue
const { createVNode: _createVNode } = _Vue

const _hoisted_1 = /*#__PURE__*/_createVNode(\\"p\\", null, [
  /*#__PURE__*/_createVNode(\\"span\\"),
  /*#__PURE__*/_createVNode(\\"span\\")
], -1 /* HOISTED */)

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _hoisted_1
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform hoist nested static tree with comments 1`] = `
"const _Vue = Vue
const { createVNode: _createVNode, createCommentVNode: _createCommentVNode } = _Vue

const _hoisted_1 = /*#__PURE__*/_createVNode(\\"div\\", null, [
  /*#__PURE__*/_createCommentVNode(\\"comment\\")
], -1 /* HOISTED */)

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createCommentVNode: _createCommentVNode, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _hoisted_1
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform hoist siblings with common non-hoistable parent 1`] = `
"const _Vue = Vue
const { createVNode: _createVNode } = _Vue

const _hoisted_1 = /*#__PURE__*/_createVNode(\\"span\\", null, null, -1 /* HOISTED */)
const _hoisted_2 = /*#__PURE__*/_createVNode(\\"div\\", null, null, -1 /* HOISTED */)

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _hoisted_1,
      _hoisted_2
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform hoist simple element 1`] = `
"const _Vue = Vue
const { createVNode: _createVNode } = _Vue

const _hoisted_1 = /*#__PURE__*/_createVNode(\\"span\\", { class: \\"inline\\" }, \\"hello\\", -1 /* HOISTED */)

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _hoisted_1
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform hoist static props for elements with directives 1`] = `
"const _Vue = Vue
const { createVNode: _createVNode } = _Vue

const _hoisted_1 = { id: \\"foo\\" }

return function render(_ctx, _cache) {
  with (_ctx) {
    const { resolveDirective: _resolveDirective, createVNode: _createVNode, withDirectives: _withDirectives, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    const _directive_foo = _resolveDirective(\\"foo\\")

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _withDirectives(_createVNode(\\"div\\", _hoisted_1, null, 512 /* NEED_PATCH */), [
        [_directive_foo]
      ])
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform hoist static props for elements with dynamic text children 1`] = `
"const _Vue = Vue
const { createVNode: _createVNode } = _Vue

const _hoisted_1 = { id: \\"foo\\" }

return function render(_ctx, _cache) {
  with (_ctx) {
    const { toDisplayString: _toDisplayString, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _createVNode(\\"div\\", _hoisted_1, _toDisplayString(hello), 1 /* TEXT */)
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform hoist static props for elements with unhoistable children 1`] = `
"const _Vue = Vue
const { createVNode: _createVNode } = _Vue

const _hoisted_1 = { id: \\"foo\\" }

return function render(_ctx, _cache) {
  with (_ctx) {
    const { resolveComponent: _resolveComponent, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    const _component_Comp = _resolveComponent(\\"Comp\\")

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _createVNode(\\"div\\", _hoisted_1, [
        _createVNode(_component_Comp)
      ])
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform prefixIdentifiers hoist class with static object value 1`] = `
"const _Vue = Vue
const { createVNode: _createVNode } = _Vue

const _hoisted_1 = { class: { foo: true } }

return function render(_ctx, _cache) {
  with (_ctx) {
    const { toDisplayString: _toDisplayString, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _createVNode(\\"span\\", _hoisted_1, _toDisplayString(_ctx.bar), 1 /* TEXT */)
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform prefixIdentifiers hoist nested static tree with static interpolation 1`] = `
"const _Vue = Vue
const { createVNode: _createVNode } = _Vue

const _hoisted_1 = /*#__PURE__*/_createVNode(\\"span\\", null, \\"foo \\" + /*#__PURE__*/_toDisplayString(1) + \\" \\" + /*#__PURE__*/_toDisplayString(true), -1 /* HOISTED */)

return function render(_ctx, _cache) {
  with (_ctx) {
    const { toDisplayString: _toDisplayString, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _hoisted_1
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform prefixIdentifiers hoist nested static tree with static prop value 1`] = `
"const _Vue = Vue
const { createVNode: _createVNode } = _Vue

const _hoisted_1 = /*#__PURE__*/_createVNode(\\"span\\", { foo: 0 }, /*#__PURE__*/_toDisplayString(1), -1 /* HOISTED */)

return function render(_ctx, _cache) {
  with (_ctx) {
    const { toDisplayString: _toDisplayString, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _hoisted_1
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform prefixIdentifiers should NOT hoist elements with cached handlers 1`] = `
"import { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \\"vue\\"

export function render(_ctx, _cache) {
  return (_openBlock(), _createBlock(\\"div\\", null, [
    _createVNode(\\"div\\", null, [
      _createVNode(\\"div\\", {
        onClick: _cache[1] || (_cache[1] = (...args) => (_ctx.foo(...args)))
      })
    ])
  ]))
}"
`;

exports[`compiler: hoistStatic transform prefixIdentifiers should NOT hoist expressions that refer scope variables (2) 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { renderList: _renderList, Fragment: _Fragment, openBlock: _openBlock, createBlock: _createBlock, toDisplayString: _toDisplayString, createVNode: _createVNode } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.list, (o) => {
        return (_openBlock(), _createBlock(\\"p\\", null, [
          _createVNode(\\"span\\", null, _toDisplayString(o + 'foo'), 1 /* TEXT */)
        ]))
      }), 256 /* UNKEYED_FRAGMENT */))
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform prefixIdentifiers should NOT hoist expressions that refer scope variables (v-slot) 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { toDisplayString: _toDisplayString, createTextVNode: _createTextVNode, resolveComponent: _resolveComponent, withCtx: _withCtx, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    const _component_Comp = _resolveComponent(\\"Comp\\")

    return (_openBlock(), _createBlock(_component_Comp, null, {
      default: _withCtx(({ foo }) => [
        _createTextVNode(_toDisplayString(_ctx.foo), 1 /* TEXT */)
      ]),
      _: 1
    }))
  }
}"
`;

exports[`compiler: hoistStatic transform prefixIdentifiers should NOT hoist expressions that refer scope variables 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { renderList: _renderList, Fragment: _Fragment, openBlock: _openBlock, createBlock: _createBlock, toDisplayString: _toDisplayString, createVNode: _createVNode } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.list, (o) => {
        return (_openBlock(), _createBlock(\\"p\\", null, [
          _createVNode(\\"span\\", null, _toDisplayString(o), 1 /* TEXT */)
        ]))
      }), 256 /* UNKEYED_FRAGMENT */))
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform prefixIdentifiers should NOT hoist keyed template v-for with plain element child 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { renderList: _renderList, Fragment: _Fragment, openBlock: _openBlock, createBlock: _createBlock, createVNode: _createVNode } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      (_openBlock(true), _createBlock(_Fragment, null, _renderList(items, (item) => {
        return (_openBlock(), _createBlock(\\"span\\", { key: item }))
      }), 128 /* KEYED_FRAGMENT */))
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform should NOT hoist components 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { resolveComponent: _resolveComponent, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    const _component_Comp = _resolveComponent(\\"Comp\\")

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _createVNode(_component_Comp)
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform should NOT hoist element with dynamic key 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { openBlock: _openBlock, createBlock: _createBlock, createVNode: _createVNode } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      (_openBlock(), _createBlock(\\"div\\", { key: foo }))
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform should NOT hoist element with dynamic props 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _createVNode(\\"div\\", { id: foo }, null, 8 /* PROPS */, [\\"id\\"])
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform should NOT hoist element with dynamic ref 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _createVNode(\\"div\\", { ref: foo }, null, 512 /* NEED_PATCH */)
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform should NOT hoist root node 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\"))
  }
}"
`;

exports[`compiler: hoistStatic transform should hoist v-for children if static 1`] = `
"const _Vue = Vue
const { createVNode: _createVNode } = _Vue

const _hoisted_1 = { id: \\"foo\\" }
const _hoisted_2 = /*#__PURE__*/_createVNode(\\"span\\", null, null, -1 /* HOISTED */)

return function render(_ctx, _cache) {
  with (_ctx) {
    const { renderList: _renderList, Fragment: _Fragment, openBlock: _openBlock, createBlock: _createBlock, createVNode: _createVNode } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      (_openBlock(true), _createBlock(_Fragment, null, _renderList(list, (i) => {
        return (_openBlock(), _createBlock(\\"div\\", _hoisted_1, [
          _hoisted_2
        ]))
      }), 256 /* UNKEYED_FRAGMENT */))
    ]))
  }
}"
`;

exports[`compiler: hoistStatic transform should hoist v-if props/children if static 1`] = `
"const _Vue = Vue
const { createVNode: _createVNode, createCommentVNode: _createCommentVNode } = _Vue

const _hoisted_1 = {
  key: 0,
  id: \\"foo\\"
}
const _hoisted_2 = /*#__PURE__*/_createVNode(\\"span\\", null, null, -1 /* HOISTED */)

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock, createCommentVNode: _createCommentVNode } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      ok
        ? (_openBlock(), _createBlock(\\"div\\", _hoisted_1, [
            _hoisted_2
          ]))
        : _createCommentVNode(\\"v-if\\", true)
    ]))
  }
}"
`;
