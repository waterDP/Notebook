// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compiler: v-once transform as root node 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { setBlockTracking: _setBlockTracking, createVNode: _createVNode } = _Vue

    return _cache[1] || (
      _setBlockTracking(-1),
      _cache[1] = _createVNode(\\"div\\", { id: foo }, null, 8 /* PROPS */, [\\"id\\"]),
      _setBlockTracking(1),
      _cache[1]
    )
  }
}"
`;

exports[`compiler: v-once transform on component 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { setBlockTracking: _setBlockTracking, resolveComponent: _resolveComponent, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    const _component_Comp = _resolveComponent(\\"Comp\\")

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _cache[1] || (
        _setBlockTracking(-1),
        _cache[1] = _createVNode(_component_Comp, { id: foo }, null, 8 /* PROPS */, [\\"id\\"]),
        _setBlockTracking(1),
        _cache[1]
      )
    ]))
  }
}"
`;

exports[`compiler: v-once transform on nested plain element 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { setBlockTracking: _setBlockTracking, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _cache[1] || (
        _setBlockTracking(-1),
        _cache[1] = _createVNode(\\"div\\", { id: foo }, null, 8 /* PROPS */, [\\"id\\"]),
        _setBlockTracking(1),
        _cache[1]
      )
    ]))
  }
}"
`;

exports[`compiler: v-once transform on slot outlet 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { setBlockTracking: _setBlockTracking, renderSlot: _renderSlot, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _cache[1] || (
        _setBlockTracking(-1),
        _cache[1] = _renderSlot($slots, \\"default\\"),
        _setBlockTracking(1),
        _cache[1]
      )
    ]))
  }
}"
`;

exports[`compiler: v-once transform with hoistStatic: true 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { setBlockTracking: _setBlockTracking, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    return (_openBlock(), _createBlock(\\"div\\", null, [
      _cache[1] || (
        _setBlockTracking(-1),
        _cache[1] = _createVNode(\\"div\\"),
        _setBlockTracking(1),
        _cache[1]
      )
    ]))
  }
}"
`;
