user nginx;

# 工作进程数 cpu 核心数
worker_processes 1;

# pid        /let/run/nginx.pid;
events {
  # 单个工作进程可以允许同时建立外部链接的数量
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  sendfile on;
  keepalive_timeout 600s;
  client_max_body_size 500m;
  client_body_timeout 600s;

  server {
    listen 80;
    server_name localhost;

    # 限制请求体的大小，若超过所设定的大小，返回413错误
    client_max_body_size 1024m; 

    # 读取请求头超时时间，若超过所设定的大小，返回408错误
    client_header_timeout 1m;

    # 读取请求实体的超时时间，若超过所设定的大小，返回413错误
    client_body_timeout 1m;

    # http请求无法立即被容器处理，被放在nginx的待处理池中等待被处理。此参数为等等的最长时间，默认为60秒
    proxy_connect_timeout 60s;

    # http请求被窗口处理和，nginx会等待处理结果，也就是容器返回response。此参数即为服务器响应时间，默认为60秒
    proxy_read_timeout 1m;

    # http请求被服务器处理完后，把数据返回给nginx的用时，默认为60秒
    proxy_send_timeout 1m;
    root /usr/share/nginx/html;

    # location 优先级
    # =   开头表示精确匹配，只有完全相同才匹配
    # ^~  开头表示uri以某个常规字符串开头，理解为匹配url路径即可
    # ~   开头表示区分大小写的正则匹配
    # ~*  开头表示不区分大小写的正则匹配
    # !~ 和 !~*分别为区分大小写不匹配及不区分大小写不匹配的正则
    # / 通用匹配，任何请求会会匹配到

    # router history模式设置
    location / {
      try_files $uri $uri/ /index.html;
    }

    location ^~ /csm {
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      add_header Access-Control-Allow-Origin * always;
      add_header Access-Control-Allow-Headers *;
      add_header Access-Control-Allow-Methods "GET, POST, PUT, DELTE, OPTIONS"
      if ($request_method = 'OPTIONS') {
        return 200;
      }
      proxy_pass http://10.100.10.4:5501;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root /usr/share/nginx/html;
    }

  }
}
